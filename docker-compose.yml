version: "3.8"

services:
  db:
    image: postgres
    environment:
        POSTGRES_USER: jee
        POSTGRES_PASSWORD: jee
        POSTGRES_DB: orders
    ports:
      - "5432:5432"
    volumes:
      - ./database/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - jee-demo-network

  domain-backend:
    build: ./domain-backend
    depends_on:
      - db
    environment:
      DEBUG: ""
      SKIP_DB_CONFIG: "true"
    ports:
      - "8081:8080"
      - "9991:9990"
    networks:
      - jee-demo-network

  app-backend:
    build: ./app-backend
    depends_on:
    - domain-backend
    ports:
      - "8080:8080"
      - "9990:9990"
    networks:
      - jee-demo-network


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.10
    environment:
        ES_JAVA_OPTS: -Xms2g -Xmx2g
        discovery.type: single-node
        xpack.security.enabled: "false"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - jee-demo-network

  jaeger:
    image: jaegertracing/all-in-one
    depends_on:
      - elasticsearch
    environment:
        SPAN_STORAGE_TYPE: elasticsearch
        ES_SERVER_URLS: http://elasticsearch:9200
        ES_TAGS_AS_FIELDS_ALL: "true"
    ports:
      - "16686:16686"
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
    restart: on-failure
    networks:
      - jee-demo-network

  kibana:
    image: docker.elastic.co/kibana/kibana:5.6.10
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    restart: on-failure
    networks:
      - jee-demo-network

  example-hotrod:
    image: jaegertracing/example-hotrod:1.7
    ports:
      - "28080:8080"
      - "28081:8081"
      - "28082:8082"
      - "28083:8083"
    restart: on-failure
    networks:
      - jee-demo-network

  prometheus:
    build: ./prometheus
    ports:
    - "9090:9090"
    networks:
    - jee-demo-network

networks:
  jee-demo-network:
    driver: bridge
    ipam:
      driver: default
